version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "4"

services:
  proxy:
    image: docker.io/library/nginx 
    ports:
      # actual and only port facing any connection from outside
      # Note, change the left number if port 1236 is already in use on your system
      # You could use port 80 if you won't use a reverse proxy
      - "{{ lemmy_port }}:8536"
    volumes:
      - ./nginx_internal.conf:/etc/nginx/nginx.conf:ro,Z
      - ./proxy_params:/etc/nginx/proxy_params:ro,Z
    restart: always
    logging: *default-logging
    depends_on:
      - pictrs
      - lemmy-ui

  lemmy:
    image: {{ lemmy_docker_image }}
    hostname: lemmy
    restart: always
    logging: *default-logging
    environment:
{% if lemmy_env_vars is defined and lemmy_env_vars|length > 0 %}
{% for item in lemmy_env_vars %}
{% for key, value in item.items() %}
      - {{ key }}={{ value }}
{% endfor %}
{% endfor %}
{% endif %}
    volumes:
      - ./lemmy.hjson:/config/config.hjson:Z
    depends_on:
      - postgres
      - pictrs

  lemmy-ui:
    image: {{ lemmy_docker_ui_image }}
    environment:
{% if lemmyui_env_vars is defined and lemmyui_env_vars|length > 0 %}
{% for item in lemmyui_env_vars %}
{% for key, value in item.items() %}
      - {{ key }}={{ value }}
{% endfor %}
{% endfor %}
{% endif %}
    volumes:
      - ./volumes/lemmy-ui/extra_themes:/app/extra_themes:Z
    depends_on:
      - lemmy
    restart: always
    logging: *default-logging

  pictrs:
    image: docker.io/asonix/pictrs:0.5.13
    # this needs to match the pictrs url in lemmy.hjson
    hostname: pictrs
    # we can set options to pictrs like this, here we set max. image size and forced format for conversion
    # entrypoint: /sbin/tini -- /usr/local/bin/pict-rs -p /mnt -m 4 --image-format webp
    environment:
{% if pictrs_env_vars is defined and pictrs_env_vars|length > 0 %}
{% for item in pictrs_env_vars %}
{% for key, value in item.items() %}
      - {{ key }}={{ value }}
{% endfor %}
{% endfor %}
{% endif %}
{% if pictrs_safety is defined and pictrs_safety|bool == true %}
      - PICTRS__MEDIA__EXTERNAL_VALIDATION=http://{{ domain }}:14051/api/v1/scan/IPADDR
{% endif %}
    user: 991:991
    volumes:
      - ./volumes/pictrs:/mnt:Z
    restart: always
    logging: *default-logging
    deploy:
      resources:
        limits:
          memory: 4096M

  postgres:
    image: docker.io/postgres:15-alpine
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
{% if postgres_env_vars is defined and postgres_env_vars|length > 0 %}
{% for item in postgres_env_vars %}
{% for key, value in item.items() %}
      - {{ key }}={{ value }}
{% endfor %}
{% endfor %}
{% endif %}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:Z
      - ./customPostgresql.conf:/etc/postgresql.conf:Z
    restart: always
    command: postgres -c config_file=/etc/postgresql.conf
    shm_size: 4g
    logging: *default-logging

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=1600
    logging: *default-logging

  voyager:
    image: ghcr.io/aeharding/voyager
    ports:
      - "5314:5314"
    environment:
      - CUSTOM_LEMMY_SERVERS={{ domain }}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    logging: *default-logging

  mlmym:
    image: ghcr.io/rystaf/mlmym:latest
    ports:
      - "5315:8080"
    environment:
      - LEMMY_DOMAIN={{ domain }}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    logging: *default-logging

  photon:
    image: ghcr.io/xyphyn/photon
    ports:
      - "5316:3000"
    environment:
      - PUBLIC_INSTANCE_URL={{ domain }}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    logging: *default-logging

  alexandrite:
    image: ghcr.io/sheodox/alexandrite
    ports:
      - "5317:3000"
    environment:
      - ALEXANDRITE_DEFAULT_INSTANCE={{ domain }}
      - ALEXANDRITE_FORCE_INSTANCE={{ domain }}
      - ALEXANDRITE_WELCOME_INSTANCE_HELP=false
      - ALEXANDRITE_WELCOME_LEMMY_HELP=false
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    logging: *default-logging

  lemmy_federate:
    image: ghcr.io/ismailkarsli/lemmy-federate
    ports:
      - "52312:3000"
    environment:
{% if lemmy_federate_env_vars is defined and lemmy_federate_env_vars|length > 0 %}
{% for item in lemmy_federate_env_vars %}
{% for key, value in item.items() %}
      - {{ key }}={{ value }}
{% endfor %}
{% endfor %}
{% endif %}
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    logging: *default-logging
